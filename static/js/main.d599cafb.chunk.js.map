{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","services/storageService.js","services/favoriteService.js","components/UserList/UserList.js","pages/Home/style.js","pages/Home/Home.js","hooks/usePeopleFetch.js","pages/Favorites/style.js","pages/Favorites/Favorites.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","storageService","saveToStorage","key","val","str","JSON","stringify","localStorage","setItem","loadFromStorage","getItem","console","log","parse","favorites","favoriteService","getFavorites","toggleFavorite","user","some","favoriteUser","cell","filter","users","isLoading","useState","hoveredUserId","setHoveredUserId","filteredUsers","setFilteredUsers","filterCountries","setFilterCountries","setFavorites","useEffect","length","country","location","handleMouseLeave","handleCheckboxClicked","find","state","getIsChecked","map","index","onMouseEnter","handleMouseEnter","onMouseLeave","src","picture","large","alt","name","title","first","last","email","street","number","city","IconButton","onClick","Home","Content","Header","setUsers","setIsLoading","fetchUsers","a","axios","get","response","data","results","usePeopleFetch","Favorite","Favorites","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","type","primary","main","error","CssBaseline","NavBar","setValue","allTabs","AppBar","position","style","top","Tabs","_e","newValue","aria-label","indicatorColor","textColor","Tab","component","Link","to","AppRouter","exact","path","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d599cafb.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Text = styled.div`\n  font-size: ${({ size }) => size};\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\n`;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport * as S from \"./style\";\n\nconst Text = ({ size = \"14px\", children, bold }) => {\n  return (\n    <Typography>\n      <S.Text size={size} bold={bold}>\n        {children}\n      </S.Text>\n    </Typography>\n  );\n};\n\nexport default Text;\n","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Spinner = ({ size, color, thickness, variant }) => {\n  return (\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\n  );\n};\n\nexport default Spinner;\n","import styled from \"styled-components\";\n\nexport const CheckBox = styled.div``;\n","import React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport * as S from \"./style\";\n\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\n  const handleChange = () => {\n    onChange && onChange(value);\n  };\n  return (\n    <S.CheckBox>\n      <FormControlLabel\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\n        label={label}\n      />\n    </S.CheckBox>\n  );\n};\n\nexport default CheckBox;\n","import styled from \"styled-components\";\n\nexport const UserList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n  width: 500px;\n  height: calc(100vh - 270px);\n  margin-block-start: 30px;\n  overflow-y: auto;\n`;\n\nexport const User = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n`;\n\nexport const UserInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  max-height: 128px;\n  gap: 2px;\n  overflow: hidden;\n`;\n\nexport const UserPicture = styled.img`\n  border-radius: 45%;\n`;\n\nexport const SpinnerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const IconButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\n  transition: opacity 0.2s ease-in-out;\n`;\n\nexport const Filters = styled.div`\n  display: flex;\n  justify-content: center;\n  & > * {\n    margin-inline-end: 8px;\n  }\n`;\n","'use strict';\r\n\r\n\r\nfunction saveToStorage(key, val) {\r\n\r\n    var str = JSON.stringify(val);\r\n    localStorage.setItem(key, str)\r\n}\r\n\r\nfunction loadFromStorage(key) {\r\n    var str = localStorage.getItem(key);\r\n    console.log(str);\r\n    var val = JSON.parse(str)\r\n    return val;\r\n}\r\n\r\nexport const storageService = {\r\n    saveToStorage,\r\n    loadFromStorage\r\n}","import { storageService } from \"./storageService\";\r\n\r\nvar favorites = storageService.loadFromStorage('favorites')? storageService.loadFromStorage('favorites'):[];\r\n\r\nfunction getFavorites() {\r\n    return [...favorites]\r\n}\r\n\r\nfunction toggleFavorite(user) {\r\n    if (favorites.some(favoriteUser => favoriteUser.cell === user.cell)) { //need to be id but have some users without id\r\n        favorites = favorites.filter(favoriteUser => favoriteUser.cell !== user.cell)\r\n    } else {\r\n        favorites = [...favorites, user]\r\n    }\r\n\r\n    storageService.saveToStorage('favorites',favorites);\r\n    return favorites\r\n}\r\n\r\nexport const favoriteService = {\r\n    getFavorites,\r\n    toggleFavorite\r\n}","import React, { useEffect, useState } from \"react\";\nimport Text from \"components/Text\";\nimport Spinner from \"components/Spinner\";\nimport CheckBox from \"components/CheckBox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport * as S from \"./style\";\nimport { favoriteService } from \"services/favoriteService\";\n\nconst UserList = ({ users, isLoading }) => {\n  const [hoveredUserId, setHoveredUserId] = useState();\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [filterCountries, setFilterCountries] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n\n  useEffect(() => {\n    setFavorites(favoriteService.getFavorites())\n  }, [])\n\n\n  useEffect(() => {\n    if(!filterCountries.length) setFilteredUsers([...users]);\n    else{\n      setFilteredUsers(users.filter(user=>filterCountries.some(country=>country===user.location.country)))\n    }\n  }, [filterCountries,users])\n\n  const handleMouseEnter = (index) => {\n    setHoveredUserId(index);\n  };\n\n  const handleMouseLeave = () => {\n    setHoveredUserId();\n  };\n\n  const handleCheckboxClicked = (value) => {\n    if(filterCountries.find(country=>country===value)) setFilterCountries(state=>state.filter(country=>country!==value))\n    else setFilterCountries([...filterCountries,value])\n  }\n\n  const getIsChecked = (country) => {\n    filterCountries.some(country=>country===country)\n  }\n\n  const toggleFavorite = (user) => {\n    setFavorites(favoriteService.toggleFavorite(user))\n  }\n\n  \n\n\n\n  return (\n    <S.UserList>\n      <S.Filters>\n        <CheckBox onChange={handleCheckboxClicked} value=\"Brazil\" label=\"Brazil\" isChecked={getIsChecked('Brazil')} />\n        <CheckBox onChange={handleCheckboxClicked} value=\"Australia\" label=\"Australia\" isChecked={getIsChecked('Australia')} />\n        <CheckBox onChange={handleCheckboxClicked} value=\"Canada\" label=\"Canada\" isChecked={getIsChecked('Canada')} />\n        <CheckBox onChange={handleCheckboxClicked} value=\"Germany\" label=\"Germany\" isChecked={getIsChecked('Germany')} />\n        <CheckBox onChange={handleCheckboxClicked} value=\"France\" label=\"France\" isChecked={getIsChecked('France')} />\n      </S.Filters>\n      <S.List>\n        {filteredUsers.map((user, index) => {\n          return (\n            <S.User\n              key={index}\n              onMouseEnter={() => handleMouseEnter(index)}\n              onMouseLeave={handleMouseLeave}\n            >\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\n              <S.UserInfo>\n                <Text size=\"22px\" bold>\n                  {user?.name.title} {user?.name.first} {user?.name.last}\n                </Text>\n                <Text size=\"14px\">{user?.email}</Text>\n                <Text size=\"14px\">\n                  {user?.location.street.number} {user?.location.street.name}\n                </Text>\n                <Text size=\"14px\">\n                  {user?.location.city} {user?.location.country}\n                </Text>\n              </S.UserInfo>\n              <S.IconButtonWrapper isVisible={index === hoveredUserId || favorites.some(favoriteUser=>favoriteUser.cell===user.cell)}>\n                <IconButton\n                  onClick={()=>{toggleFavorite(user)}}\n                >\n                  <FavoriteIcon color=\"error\" />\n                </IconButton>\n              </S.IconButtonWrapper>\n            </S.User>\n          );\n        })}\n        {isLoading && (\n          <S.SpinnerWrapper>\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\n          </S.SpinnerWrapper>\n        )}\n      </S.List>\n    </S.UserList>\n  );\n};\n\nexport default UserList;\n","import styled from \"styled-components\";\n\nexport const Home = styled.div`\n  display: flex;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding-block-start: 100px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n`;\n\nexport const Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  max-width: 400px;\n  width: 100%;\n`;\n","import React from \"react\";\nimport Text from \"components/Text\";\nimport UserList from \"components/UserList\";\nimport { usePeopleFetch } from \"hooks\";\nimport * as S from \"./style\";\n\nconst Home = () => {\n  const { users, isLoading } = usePeopleFetch();\n\n  return (\n    <S.Home>\n      <S.Content>\n        <S.Header>\n          <Text size=\"64px\" bold>\n            PplFinder\n          </Text>\n        </S.Header>\n        <UserList users={users} isLoading={isLoading} />\n      </S.Content>\n    </S.Home>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const usePeopleFetch = () => {\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  async function fetchUsers() {\n    setIsLoading(true);\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=1`);\n    setIsLoading(false);\n    setUsers(response.data.results);\n  }\n\n  return { users, isLoading, fetchUsers };\n};\n","import styled from \"styled-components\";\n\nexport const Favorite = styled.div`\n  display: flex;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  flex-direction:column;\n  padding-top:60px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n`;\n\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n  width: 500px;\n  height: calc(100vh - 270px);\n  margin-block-start: 30px;\n  overflow-y: auto;\n`;\n\nexport const User = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n`;\n\nexport const UserInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  max-height: 128px;\n  gap: 2px;\n  overflow: hidden;\n`;\n\nexport const UserPicture = styled.img`\n  border-radius: 45%;\n`;\n\nexport const IconButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\n  transition: opacity 0.2s ease-in-out;\n`;\n\n","import React, { useEffect, useState } from \"react\";\nimport Text from \"components/Text\";\nimport UserList from \"components/UserList\";\nimport { usePeopleFetch } from \"hooks\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport * as S from \"./style\";\nimport { favoriteService } from \"services/favoriteService\";\n\nconst Favorites = () => {\n\n  const [favorites, setFavorites] = useState([]);\n\n\n  useEffect(() => {\n    setFavorites(favoriteService.getFavorites())\n  }, [])\n\n\n\n  \n  const toggleFavorite = (user) => {\n    setFavorites(favoriteService.toggleFavorite(user))\n  }\n\n  return (\n    <S.Favorite>\n\n      <S.Header>\n        <Text size=\"64px\" bold>\n          Favorites\n        </Text>\n      </S.Header>\n\n      <S.List>\n        {favorites.map((user, index) => {\n          return (\n            <S.User\n              key={index}\n            >\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\n              <S.UserInfo>\n                <Text size=\"22px\" bold>\n                  {user?.name.title} {user?.name.first} {user?.name.last}\n                </Text>\n                <Text size=\"14px\">{user?.email}</Text>\n                <Text size=\"14px\">\n                  {user?.location.street.number} {user?.location.street.name}\n                </Text>\n                <Text size=\"14px\">\n                  {user?.location.city} {user?.location.country}\n                </Text>\n              </S.UserInfo>\n              <S.IconButtonWrapper isVisible={true}>\n                <IconButton\n                  onClick={() => { toggleFavorite(user) }}\n                >\n                  <FavoriteIcon color=\"error\" />\n                </IconButton>\n              </S.IconButtonWrapper>\n            </S.User>\n          );\n        })}\n      </S.List>\n    </S.Favorite>\n  );\n};\n\nexport default Favorites;\n","import React from \"react\";\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst ThemeProvider = ({ children }) => {\n  const overrides = {\n    MuiTab: {\n      root: {\n        backgroundColor: \"#303030\",\n      },\n    },\n  };\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        overrides,\n        palette: {\n          type: \"dark\",\n          primary: {\n            main: \"#84ffff\",\n          },\n          error: {\n            main: \"#f06292\",\n          },\n        },\n      }),\n    []\n  );\n\n  return (\n    <Provider theme={theme}>\n      <CssBaseline />\n      {children}\n    </Provider>\n  );\n};\n\nexport default ThemeProvider;\n","import React, { useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { Route } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = () => {\n  const [value, setValue] = useState(0);\n  const allTabs = ['/', '/favorites'];\n\n  const handleChange = (_e, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Route>\n      <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"Navigation\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          <Tab label=\"Home\" index={0} component={Link} to={allTabs[0]}  />\n          <Tab label=\"Favorites\" index={1} component={Link} to={allTabs[1]} />\n        </Tabs>\n      </AppBar>\n    </Route>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Favorites, Home} from \"pages\";\nimport { ThemeProvider } from \"theme\";\nimport NavBar from \"components/NavBar\";\n\nconst AppRouter = () => {\n  return (\n    <ThemeProvider>\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/favorites\" component={Favorites} />\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppRouter from \"AppRouter\";\n\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}